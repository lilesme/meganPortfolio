[
  {"courseId": "CS 160", "name":	"COMPUTER SCIENCE ORIENTATION", "description": "Introduction to the computer science field and profession. Team problem solving. Introduction to writing computer programs. Approaches to teaching course topics vary across sections."},
  {"courseId": "CS 161", "name":	"INTRO TO COMPUTER SCIENCE I", "description": "Overview of fundamental concepts of computer science. Introduction to problem solving, software engineering, and object-oriented programming. Includes algorithm design and program development."},
  {"courseId": "CS 162", "name":	"INTRO TO COMPUTER SCIENCE II", "description": "Basic data structures. Computer programming techniques and application of software engineering principles. Introduction to analysis of programs."},
  {"courseId": "CS 261", "name":	"DATA STRUCTURES", "description": "Abstract data types, dynamic arrays, linked lists, trees and graphs, binary search trees, hash tables, storage management, complexity analysis of data structures."},
  {"courseId": "CS 271", "name":	"COMPUTER ARCH & ASSEM LANGUAGE", "description": "Introduction to functional organization and operation of digital computers. Coverage of assembly language; addressing, stacks, argument passing, arithmetic operations, decisions, macros, modularization, linkers and debuggers."},
  {"courseId": "CS 290", "name":	"WEB DEVELOPMENT", "description": "How to design and implement a multi-tier application using web technologies: Creation of extensive custom client- and server-side code, consistent with achieving a high-quality software architecture."},
  {"courseId": "CS 325", "name":	"ANALYSIS OF ALGORITHMS", "description": "Recurrence relations, combinatorics, recursive algorithms, proofs of correctness."},
  {"courseId": "CS 340", "name":	"INTRODUCTION TO DATABASES", "description": "Design and implementation of relational databases, including data modeling with ER or UML, diagrams, relational schema, SQL queries, relational algebra, user interfaces, and administration."},
  {"courseId": "CS 344", "name":	"OPERATING SYSTEMS I", "description": "Introduction to operating systems using UNIX as the case study. System calls and utilities, fundamentals of processes and interprocess communication."},
  {"courseId": "CS 352", "name":	"INTRO TO USABILITY ENGINEERING", "description": "Basic principles of usability engineering methods for the design and evaluation of software systems. Includes the study of human-machine interactions, user interface characteristics and design strategies, software evaluation methods, and related guidelines and standards."},
  {"courseId": "CS 361", "name":	"SOFTWARE ENGINEERING I", "description": "Introduction to the \"front end\" of the software engineering lifecycle; requirements analysis and specification; design techniques; project management."},
  {"courseId": "CS 362", "name":	"SOFTWARE ENGINEERING II", "description": "Introduction to the \"back end\" of the software engineering lifecycle implementation; verification and validation; debugging; maintenance."},
  {"courseId": "CS 372", "name":	"INTRO TO COMPUTER NETWORKS", "description": "Computer network principles, fundamental networking concepts, packet-switching and circuit switching, TCP/IP protocol layers, reliable data transfer, congestion control, flow control, packet forwarding and routing, MAC addressing, multiple access techniques."},
  {"courseId": "CS 381", "name":	"PROGRAMMING LANGUAGE FUND", "description": "An introduction to the concepts found in a variety of programming languages. Programming languages as tools for problem solving. A brief introduction to languages from a number of different paradigms."},
  {"courseId": "CS 391", "name":	"*SOC & ETHICAL ISSUES IN COMSC", "description": "In-depth exploration of the social, psychological, political, and ethical issues surrounding the computer industry and the evolving information society."},
  {"courseId": "CS 406", "name":	"PROJECTS", "description": "Students design and implement a project approved by department head."},
  {"courseId": "CS 419", "name":	"ST/ ADVANCED WEB DEVELOPMENT", "description": "Modern techniques for user interface construction and server-side processing."},
  {"courseId": "CS 444", "name":	"OPERATING SYSTEMS II", "description": "Principles of computer operating systems: concurrent processes, memory management, job scheduling, multiprocessing, file systems, performance evaluation, and networking."},
  {"courseId": "CS 458", "name":	"INTRO TO INFO VISUALIZATION", "description": "Tools and techniques for designing, developing, and deploying interactive visualizations of abstract data sources. Discusses techniques based on principles from design, cognitive science, and perceptual psychology. Topics include 1D, 2D, 3D, multivariate representations, time-series, graphs and trees, text and documents, and interaction techniques."},
  {"courseId": "CS 461", "name":	"SENIOR SOFTWARE ENGR PROJECT", "description": "Utilize software engineering methodology in a team environment to develop a real-world application. Teams will be responsible for all phases of software development, including project planning, requirements analysis, design, coding, testing, configuration management, quality assurance, documentation, and delivery. Three-term sequence required. This course fulfills the WIC requirement for computer science majors. (Writing Intensive Courses)."},
  {"courseId": "CS 462", "name":	"^SENIOR SOFTWARE ENGIN PROJECT", "description": "Utilize software engineering methodology in a team environment to develop a real-world application. Teams will be responsible for all phases of software development, including project planning, requirements analysis, design, coding, testing, configuration management, quality assurance, documentation, and delivery. Three-term sequence required. (Writing Intensive Courses)"},
  {"courseId": "CS 463", "name":	"ST/ SENIOR SOFTWARE ENGR PROJ", "description": "Utilize software engineering methodology in a team environment to develop a real-world application. Teams will be responsible for all phases of software development, including project planning, requirements analysis, design, coding, testing, configuration management, quality assurance, documentation, and delivery. Three-term sequence required."},
  {"courseId": "CS 468", "name":	"INCLUSIVE DESIGN (HCI)", "description": "Inclusive design is designing software that works for a wide variety of differently abled customers. Teaches the skills needed to design inclusively without having to have a separate design for each differently abled customer."},
  {"courseId": "CS 492", "name":	"MOBILE SOFTWARE DEVELOPMENT", "description": "Introduction to concepts and techniques for developing mobile applications. Students will become familiar with modern mobile structure, implementation, development tools, and workflow."}
]
