{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/meganliles/CS419/Assignments/final-project-lilesme-portfolio/src/pages/github.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport fetch from 'isomorphic-unfetch';\nimport queryString from 'query-string';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\nimport { Input, Button } from '../components/FormComponents';\nimport Spinner from '../components/Spinner';\nimport ErrorContainer from '../components/ErrorContainer';\nimport Layout from '../components/Layout';\n\nfunction useQueryString() {\n  return queryString.parse(useLocation().search);\n}\n\nfunction Github() {\n  var query = \"\";\n\n  var _useState = useState(query || \"\"),\n      inputQuery = _useState[0],\n      setInputQuery = _useState[1];\n\n  var _useState2 = useState([]),\n      repos = _useState2[0],\n      setRepos = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var _useState4 = useState(false),\n      error = _useState4[0],\n      setError = _useState4[1]; //const history = useHistory();\n\n\n  useEffect(function () {\n    if (query) {\n      var fetchSearchResults = function fetchSearchResults() {\n        var responseBody, response;\n        return _regeneratorRuntime.async(function fetchSearchResults$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                responseBody = {};\n                setLoading(true);\n                _context.prev = 2;\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(fetch(\"https://api.github.com/search/repositories?q=\".concat(query, \"&sort=stars\"), {\n                  signal: controller.signal\n                }));\n\n              case 5:\n                response = _context.sent;\n                _context.next = 8;\n                return _regeneratorRuntime.awrap(response.json());\n\n              case 8:\n                responseBody = _context.sent;\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](2);\n\n                if (_context.t0 instanceof DOMException) {\n                  console.log(\"== HTTP request aborted\");\n                } else {\n                  setError(true);\n                  console.log(_context.t0);\n                }\n\n              case 14:\n                if (!ignore) {\n                  setError(false);\n                  setLoading(false);\n                  setRepos(responseBody.items);\n                } else {\n                  console.log(\"== ignoring results\");\n                } // console.log(\"== response body:\", responseBody);\n\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[2, 11]], _Promise);\n      };\n\n      var ignore = false;\n      var controller = new AbortController();\n      fetchSearchResults();\n      return function () {\n        controller.abort();\n        ignore = true;\n      };\n    }\n  }, [query]);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Github\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n      history.push(\"?q=\".concat(inputQuery));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(Input, {\n    value: inputQuery,\n    onChange: function onChange(e) {\n      return setInputQuery(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), __jsx(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Search\")), error && __jsx(ErrorContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Error!\"), loading ? __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }) : __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, repos.map(function (repo) {\n    return __jsx(\"li\", {\n      key: repo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: repo.html_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, repo.full_name));\n  }))));\n}\n\nexport default Github;","map":{"version":3,"sources":["/Users/meganliles/CS419/Assignments/final-project-lilesme-portfolio/src/pages/github.js"],"names":["React","useState","useEffect","useHistory","fetch","queryString","Switch","Route","Redirect","useLocation","Input","Button","Spinner","ErrorContainer","Layout","useQueryString","parse","search","Github","query","inputQuery","setInputQuery","repos","setRepos","loading","setLoading","error","setError","fetchSearchResults","responseBody","signal","controller","response","json","DOMException","console","log","ignore","items","AbortController","abort","e","preventDefault","history","push","target","value","map","repo","id","html_url","full_name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport fetch from 'isomorphic-unfetch';\n\nimport queryString from 'query-string';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\n\nimport { Input, Button } from '../components/FormComponents';\nimport Spinner from '../components/Spinner';\nimport ErrorContainer from '../components/ErrorContainer';\n\nimport Layout from '../components/Layout';\n\nfunction useQueryString() {\n  return queryString.parse(useLocation().search);\n}\n\nfunction Github() {\n  const query = \"\";\n  const [ inputQuery, setInputQuery ] = useState(query || \"\");\n  const [ repos, setRepos ] = useState([]);\n  const [ loading, setLoading ] = useState(false);\n  const [ error, setError ] = useState(false);\n  //const history = useHistory();\n\n  useEffect(() => {\n    if (query) {\n      let ignore = false;\n      const controller = new AbortController();\n\n      async function fetchSearchResults() {\n        let responseBody = {};\n        setLoading(true);\n        try {\n          const response = await fetch(\n            `https://api.github.com/search/repositories?q=${query}&sort=stars`,\n            { signal: controller.signal }\n          );\n          responseBody = await response.json();\n        } catch (e) {\n          if (e instanceof DOMException) {\n            console.log(\"== HTTP request aborted\");\n          } else {\n            setError(true);\n            console.log(e);\n          }\n        }\n\n        if (!ignore) {\n          setError(false);\n          setLoading(false);\n          setRepos(responseBody.items);\n        } else {\n          console.log(\"== ignoring results\");\n        }\n        // console.log(\"== response body:\", responseBody);\n      }\n\n      fetchSearchResults();\n      return () => {\n        controller.abort();\n        ignore = true;\n      };\n    }\n  }, [ query ]);\n\n  return (\n    <div>\n      <Layout>\n        <h1>Github</h1>\n      </Layout>\n      <div>\n      <form onSubmit={(e) => {\n        e.preventDefault();\n        history.push(`?q=${inputQuery}`);\n      }}>\n        <Input\n          value={inputQuery}\n          onChange={e => setInputQuery(e.target.value)}\n        />\n        <Button type=\"submit\">Search</Button>\n      </form>\n      {error && <ErrorContainer>Error!</ErrorContainer>}\n      {loading ? (\n        <Spinner />\n      ) :\n        <ul>\n          {repos.map(repo => (\n            <li key={repo.id}>\n              <a href={repo.html_url}>{repo.full_name}</a>\n            </li>\n          ))}\n        </ul>\n      }\n    </div>\n  </div>\n  );\n}\n\nexport default Github;\n"]},"metadata":{},"sourceType":"module"}