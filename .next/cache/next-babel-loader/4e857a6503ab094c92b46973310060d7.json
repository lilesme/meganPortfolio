{"ast":null,"code":"var _jsxFileName = \"/Users/meganliles/CS419/Assignments/final-project-lilesme-portfolio/src/pages/github.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport fetch from 'isomorphic-unfetch';\nimport queryString from 'query-string';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\nimport { useRouter } from 'next/router';\nimport { Input, Button } from '../components/FormComponents';\nimport Spinner from '../components/Spinner';\nimport ErrorContainer from '../components/ErrorContainer';\nimport Layout from '../components/Layout';\n\nfunction Github() {\n  const router = useRouter();\n  const query = router.query.q;\n  const {\n    0: inputQuery,\n    1: setInputQuery\n  } = useState(query || \"\");\n  const {\n    0: repos,\n    1: setRepos\n  } = useState([]);\n  useEffect(() => {\n    if (query) {\n      async function fetchSearchResults() {\n        console.log(\"== Fetching search results for query:\", query);\n        setRepos(null);\n        const response = await fetch(`https://api.github.com/search/repositories?q=${query}&sort=stars`);\n        const responseBody = await response.json();\n        setRepos(responseBody.items || []);\n      }\n\n      fetchSearchResults();\n    }\n  }, [query]);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Github\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      router.push(`${router.pathname}?q=${inputQuery}`);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    value: inputQuery,\n    onChange: e => setInputQuery(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Search\")), !repos && __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Loading...\"), repos && __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, repos.map(repo => __jsx(\"li\", {\n    key: repo.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    href: repo.html_url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, repo.full_name))))));\n}\n\n;\nexport default Github;","map":{"version":3,"sources":["/Users/meganliles/CS419/Assignments/final-project-lilesme-portfolio/src/pages/github.js"],"names":["React","useState","useEffect","useHistory","fetch","queryString","Switch","Route","Redirect","useLocation","useRouter","Input","Button","Spinner","ErrorContainer","Layout","Github","router","query","q","inputQuery","setInputQuery","repos","setRepos","fetchSearchResults","console","log","response","responseBody","json","items","e","preventDefault","push","pathname","target","value","map","repo","id","html_url","full_name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,EAAkCC,WAAlC,QAAqD,kBAArD;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,8BAA9B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAMQ,KAAK,GAAGD,MAAM,CAACC,KAAP,CAAaC,CAA3B;AACA,QAAM;AAAA,OAAEC,UAAF;AAAA,OAAcC;AAAd,MAAgCpB,QAAQ,CAACiB,KAAK,IAAI,EAAV,CAA9C;AACA,QAAM;AAAA,OAAEI,KAAF;AAAA,OAASC;AAAT,MAAsBtB,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,KAAJ,EAAW;AACT,qBAAeM,kBAAf,GAAoC;AAClCC,QAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDR,KAArD;AACAK,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,cAAMI,QAAQ,GAAG,MAAMvB,KAAK,CACzB,gDAA+Cc,KAAM,aAD5B,CAA5B;AAGA,cAAMU,YAAY,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAA3B;AACAN,QAAAA,QAAQ,CAACK,YAAY,CAACE,KAAb,IAAsB,EAAvB,CAAR;AACD;;AAEDN,MAAAA,kBAAkB;AACnB;AACF,GAdQ,EAcN,CAAEN,KAAF,CAdM,CAAT;AAgBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAGa,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACC,cAAF;AACAf,MAAAA,MAAM,CAACgB,IAAP,CAAa,GAAEhB,MAAM,CAACiB,QAAS,MAAKd,UAAW,EAA/C;AACD,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AACE,IAAA,KAAK,EAAEA,UADT;AAEE,IAAA,QAAQ,EAAEW,CAAC,IAAIV,aAAa,CAACU,CAAC,CAACI,MAAF,CAASC,KAAV,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAQE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CADF,EAWG,CAACd,KAAD,IAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXb,EAYGA,KAAK,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACe,GAAN,CAAUC,IAAI,IACb;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAED,IAAI,CAACE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBF,IAAI,CAACG,SAA9B,CADF,CADD,CADH,CAbJ,CAJA,CADF;AA6BD;;AAAA;AAED,eAAezB,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport fetch from 'isomorphic-unfetch';\n\nimport queryString from 'query-string';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\nimport { useRouter } from 'next/router';\n\nimport { Input, Button } from '../components/FormComponents';\nimport Spinner from '../components/Spinner';\nimport ErrorContainer from '../components/ErrorContainer';\n\nimport Layout from '../components/Layout';\n\nfunction Github() {\n  const router = useRouter();\n  const query = router.query.q;\n  const [ inputQuery, setInputQuery ] = useState(query || \"\");\n  const [ repos, setRepos ] = useState([]);\n\n  useEffect(() => {\n    if (query) {\n      async function fetchSearchResults() {\n        console.log(\"== Fetching search results for query:\", query);\n        setRepos(null);\n        const response = await fetch(\n          `https://api.github.com/search/repositories?q=${query}&sort=stars`\n        );\n        const responseBody = await response.json();\n        setRepos(responseBody.items || []);\n      }\n\n      fetchSearchResults();\n    }\n  }, [ query ]);\n\n  return (\n    <div>\n      <Layout>\n        <h1>Github</h1>\n      </Layout>\n    <div>\n      <form onSubmit={(e) => {\n        e.preventDefault();\n        router.push(`${router.pathname}?q=${inputQuery}`);\n      }}>\n        <input\n          value={inputQuery}\n          onChange={e => setInputQuery(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {!repos && <p>Loading...</p> }\n      {repos && (\n        <ul>\n          {repos.map(repo => (\n            <li key={repo.id}>\n              <a href={repo.html_url}>{repo.full_name}</a>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  </div>\n  );\n};\n\nexport default Github;\n"]},"metadata":{},"sourceType":"module"}