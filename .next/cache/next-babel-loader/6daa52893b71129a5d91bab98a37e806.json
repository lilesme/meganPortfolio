{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/meganliles/CS419/Assignments/final-project-lilesme-portfolio/src/pages/github.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport fetch from 'isomorphic-unfetch';\nimport queryString from 'query-string';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\nimport { useRouter } from 'next/router';\nimport { Input, Button } from '../components/FormComponents';\nimport Spinner from '../components/Spinner';\nimport ErrorContainer from '../components/ErrorContainer';\nimport Layout from '../components/Layout';\n\nfunction Github() {\n  var router = useRouter();\n  var query = router.query.q;\n\n  var _useState = useState(query || \"\"),\n      inputQuery = _useState[0],\n      setInputQuery = _useState[1];\n\n  var _useState2 = useState([]),\n      repos = _useState2[0],\n      setRepos = _useState2[1];\n\n  useEffect(function () {\n    if (query) {\n      var fetchSearchResults = function fetchSearchResults() {\n        var response, responseBody;\n        return _regeneratorRuntime.async(function fetchSearchResults$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"== Fetching search results for query:\", query);\n                setRepos(null);\n                _context.next = 4;\n                return _regeneratorRuntime.awrap(fetch(\"https://api.github.com/search/repositories?q=\".concat(query, \"&sort=stars\")));\n\n              case 4:\n                response = _context.sent;\n                _context.next = 7;\n                return _regeneratorRuntime.awrap(response.json());\n\n              case 7:\n                responseBody = _context.sent;\n                setRepos(responseBody.items || []);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, _Promise);\n      };\n\n      fetchSearchResults();\n    }\n  }, [query]);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Github\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n      router.push(\"\".concat(router.pathname, \"?q=\").concat(inputQuery));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    value: inputQuery,\n    onChange: function onChange(e) {\n      return setInputQuery(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Search\")), !repos && __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Loading...\"), repos && __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, repos.map(function (repo) {\n    return __jsx(\"li\", {\n      key: repo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: repo.html_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, repo.full_name));\n  }))));\n}\n\n;\nexport default Github;","map":{"version":3,"sources":["/Users/meganliles/CS419/Assignments/final-project-lilesme-portfolio/src/pages/github.js"],"names":["React","useState","useEffect","useHistory","fetch","queryString","Switch","Route","Redirect","useLocation","useRouter","Input","Button","Spinner","ErrorContainer","Layout","Github","router","query","q","inputQuery","setInputQuery","repos","setRepos","fetchSearchResults","console","log","response","json","responseBody","items","e","preventDefault","push","pathname","target","value","map","repo","id","html_url","full_name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport fetch from 'isomorphic-unfetch';\n\nimport queryString from 'query-string';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\nimport { useRouter } from 'next/router';\n\nimport { Input, Button } from '../components/FormComponents';\nimport Spinner from '../components/Spinner';\nimport ErrorContainer from '../components/ErrorContainer';\n\nimport Layout from '../components/Layout';\n\nfunction Github() {\n  const router = useRouter();\n  const query = router.query.q;\n  const [ inputQuery, setInputQuery ] = useState(query || \"\");\n  const [ repos, setRepos ] = useState([]);\n\n  useEffect(() => {\n    if (query) {\n      async function fetchSearchResults() {\n        console.log(\"== Fetching search results for query:\", query);\n        setRepos(null);\n        const response = await fetch(\n          `https://api.github.com/search/repositories?q=${query}&sort=stars`\n        );\n        const responseBody = await response.json();\n        setRepos(responseBody.items || []);\n      }\n\n      fetchSearchResults();\n    }\n  }, [ query ]);\n\n  return (\n    <div>\n      <Layout>\n        <h1>Github</h1>\n      </Layout>\n    <div>\n      <form onSubmit={(e) => {\n        e.preventDefault();\n        router.push(`${router.pathname}?q=${inputQuery}`);\n      }}>\n        <input\n          value={inputQuery}\n          onChange={e => setInputQuery(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {!repos && <p>Loading...</p> }\n      {repos && (\n        <ul>\n          {repos.map(repo => (\n            <li key={repo.id}>\n              <a href={repo.html_url}>{repo.full_name}</a>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  </div>\n  );\n};\n\nexport default Github;\n"]},"metadata":{},"sourceType":"module"}