{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/meganliles/CS419/Assignments/final-project-lilesme-portfolio/src/pages/github.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  @import url('https://fonts.googleapis.com/css?family=Nunito&display=swap');\\n  font-family: 'Nunito', sans-serif;\\n  text-align: center;\\n  margin-left: auto;\\n  margin-right: auto;\\n  display: block;\\n  ul {\\n    list-style:  none;\\n    display: inline-block;\\n  }\\n  a {\\n    text-decoration:  none;\\n    display: block;\\n    background-color: lightgrey;\\n    width: 90px;\\n    color: black;\\n    border-radius: 5px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport fetch from 'isomorphic-unfetch';\nimport queryString from 'query-string';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\nimport { useRouter } from 'next/router';\nimport { Input, Button } from '../components/FormComponents';\nimport Spinner from '../components/Spinner';\nimport ErrorContainer from '../components/ErrorContainer';\nimport Layout from '../components/Layout';\nvar search = css(_templateObject());\n\nfunction Github() {\n  var router = useRouter();\n  var query = router.query.q;\n\n  var _useState = useState(query || \"\"),\n      inputQuery = _useState[0],\n      setInputQuery = _useState[1];\n\n  var _useState2 = useState([]),\n      repos = _useState2[0],\n      setRepos = _useState2[1];\n\n  var _useState3 = useState(false),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var _useState4 = useState(false),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function () {\n    if (query) {\n      var fetchSearchResults = function fetchSearchResults() {\n        var responseBody, response;\n        return _regeneratorRuntime.async(function fetchSearchResults$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                responseBody = {};\n                setLoading(true); //console.log(\"== Fetching search results for query:\", query);\n                //setRepos(null);\n\n                _context.prev = 2;\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(fetch(\"https://api.github.com/search/repositories?q={\".concat(query, \"+in:file+user:lilesme&sort=stars\"), {\n                  signal: controller.signal\n                }));\n\n              case 5:\n                response = _context.sent;\n                _context.next = 8;\n                return _regeneratorRuntime.awrap(response.json());\n\n              case 8:\n                responseBody = _context.sent;\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](2);\n\n                if (_context.t0 instanceof DOMException) {\n                  console.log(\"== HTTP request aborted\");\n                } else {\n                  setError(true);\n                  console.log(_context.t0);\n                }\n\n              case 14:\n                if (!ignore) {\n                  setError(false);\n                  setLoading(false);\n                  setRepos(responseBody.items || []);\n                } else {\n                  console.log(\"== ignoring results\");\n                } //setRepos(responseBody.items || []);\n\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[2, 11]], _Promise);\n      };\n\n      var ignore = false;\n      var controller = new AbortController();\n      fetchSearchResults();\n      return function () {\n        controller.abort();\n        ignore = true;\n      };\n    }\n  }, [query]);\n  return jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Github\"), jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Search my repositories on Github!\")), jsx(\"div\", {\n    css: search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n      router.push(\"\".concat(router.pathname, \"?q=\").concat(inputQuery));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, jsx(Input, {\n    value: inputQuery,\n    onChange: function onChange(e) {\n      return setInputQuery(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), jsx(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Search\")), error && jsx(ErrorContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Error!\"), loading ? jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }) : jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, repos.map(function (repo) {\n    return jsx(\"li\", {\n      key: repo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, jsx(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, repo.full_name), jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, repo.description), jsx(\"a\", {\n      href: repo.html_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"View Repo\"));\n  }))));\n}\n\n;\nexport default Github;","map":{"version":3,"sources":["/Users/meganliles/CS419/Assignments/final-project-lilesme-portfolio/src/pages/github.js"],"names":["jsx","css","React","useState","useEffect","useHistory","fetch","queryString","Switch","Route","Redirect","useLocation","useRouter","Input","Button","Spinner","ErrorContainer","Layout","search","Github","router","query","q","inputQuery","setInputQuery","repos","setRepos","error","setError","loading","setLoading","fetchSearchResults","responseBody","signal","controller","response","json","DOMException","console","log","ignore","items","AbortController","abort","e","preventDefault","push","pathname","target","value","map","repo","id","full_name","description","html_url"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport fetch from 'isomorphic-unfetch';\n\nimport queryString from 'query-string';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\nimport { useRouter } from 'next/router';\n\nimport { Input, Button } from '../components/FormComponents';\nimport Spinner from '../components/Spinner';\nimport ErrorContainer from '../components/ErrorContainer';\n\nimport Layout from '../components/Layout';\n\nconst search = css `\n  @import url('https://fonts.googleapis.com/css?family=Nunito&display=swap');\n  font-family: 'Nunito', sans-serif;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n  display: block;\n  ul {\n    list-style:  none;\n    display: inline-block;\n  }\n  a {\n    text-decoration:  none;\n    display: block;\n    background-color: lightgrey;\n    width: 90px;\n    color: black;\n    border-radius: 5px;\n  }\n`;\n\nfunction Github() {\n  const router = useRouter();\n  const query = router.query.q;\n  const [ inputQuery, setInputQuery ] = useState(query || \"\");\n  const [ repos, setRepos ] = useState([]);\n  const [ error, setError ] = useState(false);\n  const [ loading, setLoading ] = useState(false);\n\n\n  useEffect(() => {\n    if (query) {\n      let ignore = false;\n      const controller = new AbortController();\n\n      async function fetchSearchResults() {\n        let responseBody = {};\n        setLoading(true);\n\n        //console.log(\"== Fetching search results for query:\", query);\n        //setRepos(null);\n\n        try {\n        const response = await fetch(\n          `https://api.github.com/search/repositories?q={${query}+in:file+user:lilesme&sort=stars`,\n          { signal: controller.signal }\n        );\n        responseBody = await response.json();\n      } catch (e) {\n          if (e instanceof DOMException) {\n            console.log(\"== HTTP request aborted\");\n          } else {\n            setError(true);\n            console.log(e);\n          }\n        }\n        if (!ignore) {\n          setError(false);\n          setLoading(false);\n          setRepos(responseBody.items || []);\n        } else {\n          console.log(\"== ignoring results\");\n        }\n        //setRepos(responseBody.items || []);\n      }\n\n      fetchSearchResults();\n      return () => {\n        controller.abort();\n        ignore = true;\n      };\n    }\n  }, [ query ]);\n\n  return (\n    <div>\n      <Layout>\n        <h1>Github</h1>\n        <h2>Search my repositories on Github!</h2>\n      </Layout>\n    <div css={search}>\n      <form onSubmit={(e) => {\n        e.preventDefault();\n        router.push(`${router.pathname}?q=${inputQuery}`);\n      }}>\n        <Input\n          value={inputQuery}\n          onChange={e => setInputQuery(e.target.value)}\n        />\n      <Button type=\"submit\">Search</Button>\n      </form>\n      {error && <ErrorContainer>Error!</ErrorContainer>}\n      {loading ? (\n        <Spinner />\n      ) :\n        <ul>\n          {repos.map(repo => (\n            <li key={repo.id}>\n              <h4>{repo.full_name}</h4>\n              <p>{repo.description}</p>\n              <a href={repo.html_url}>View Repo</a>\n            </li>\n          ))}\n        </ul>\n      }\n    </div>\n  </div>\n  );\n};\n\nexport default Github;\n"]},"metadata":{},"sourceType":"module"}