{"ast":null,"code":"var _jsxFileName = \"/Users/meganliles/CS419/Assignments/final-project-lilesme-portfolio/src/components/Spotify.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\n\nfunction Spotify() {\n  const {\n    0: songs,\n    1: setSongs\n  } = useState([]);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  async function fetchSpotifyData() {\n    let responseBody = {};\n    setLoading(true);\n\n    try {\n      const response = await fetch(`https://api.spotify.com/v1/me/top/artists?time_range=medium_term&limit=5&offset=5\" -H \"Accept: application/json\" -H \"Content-Type: application/json\" -H \"Authorization: Bearer BQDEuD5-GV7XCVv6xJdrVsoHwyb1B9MNT8pafW1dqI-YaLbDbqgvw33paOK5DIsvfv1E4fc2eSMHIesn2B-gSN7MdcP6UEW2oobRsFU7doGE8gJCF5U0_JIo4l8AxxtE510pO9quobE_8ng2GhzPIQ\")`, {\n        signal: controller.signal\n      });\n      responseBody = await response.json();\n    } catch (e) {\n      if (e instanceof DOMException) {\n        console.log(\"== HTTP request aborted\");\n      } else {\n        setError(true);\n        console.log(e);\n      }\n    }\n\n    if (!ignore) {\n      setError(false);\n      setLoading(false);\n      setSongs(responseBody.items || []);\n    } else {\n      console.log(\"== ignoring results\");\n    }\n\n    fetchSpotifyData();\n    return () => {\n      controller.abort();\n      ignore = true;\n    };\n  }\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, error && __jsx(ErrorContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Error!\"), loading ? __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }) : __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, songs.map((song, key) => __jsx(\"li\", {\n    key: song[key].id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    href: song[key].preview_url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, song[key].name)))));\n}\n\n;\nexport default Spotify;","map":{"version":3,"sources":["/Users/meganliles/CS419/Assignments/final-project-lilesme-portfolio/src/components/Spotify.js"],"names":["React","useState","useEffect","fetch","Spotify","songs","setSongs","error","setError","loading","setLoading","fetchSpotifyData","responseBody","response","signal","controller","json","e","DOMException","console","log","ignore","items","abort","map","song","key","id","preview_url","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAAEM,KAAF;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAAEQ,OAAF;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAC,KAAD,CAAxC;;AAEA,iBAAeU,gBAAf,GAAkC;AAChC,QAAIC,YAAY,GAAG,EAAnB;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACF,YAAMG,QAAQ,GAAG,MAAMV,KAAK,CACzB,yUADyB,EAE1B;AAAEW,QAAAA,MAAM,EAAEC,UAAU,CAACD;AAArB,OAF0B,CAA5B;AAIAF,MAAAA,YAAY,GAAG,MAAMC,QAAQ,CAACG,IAAT,EAArB;AACD,KAND,CAME,OAAOC,CAAP,EAAU;AACR,UAAIA,CAAC,YAAYC,YAAjB,EAA+B;AAC7BC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,OAFD,MAEO;AACLZ,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACD;AACF;;AACD,QAAI,CAACI,MAAL,EAAa;AACXb,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,MAAAA,QAAQ,CAACM,YAAY,CAACU,KAAb,IAAsB,EAAvB,CAAR;AACD,KAJD,MAIO;AACLH,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;;AAEHT,IAAAA,gBAAgB;AAChB,WAAO,MAAM;AACXI,MAAAA,UAAU,CAACQ,KAAX;AACAF,MAAAA,MAAM,GAAG,IAAT;AACD,KAHD;AAID;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,KAAK,IAAI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADZ,EAEGE,OAAO,GACN,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACmB,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,KACT;AAAI,IAAA,GAAG,EAAED,IAAI,CAACC,GAAD,CAAJ,CAAUC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAEF,IAAI,CAACC,GAAD,CAAJ,CAAUE,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCH,IAAI,CAACC,GAAD,CAAJ,CAAUG,IAA3C,CADF,CADD,CADH,CALJ,CADF;AAgBD;;AAAA;AAED,eAAezB,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\n\nfunction Spotify() {\n  const [ songs, setSongs ] = useState([]);\n  const [ error, setError ] = useState(false);\n  const [ loading, setLoading ] = useState(false);\n\n  async function fetchSpotifyData() {\n    let responseBody = {};\n    setLoading(true);\n\n    try {\n      const response = await fetch(\n        `https://api.spotify.com/v1/me/top/artists?time_range=medium_term&limit=5&offset=5\" -H \"Accept: application/json\" -H \"Content-Type: application/json\" -H \"Authorization: Bearer BQDEuD5-GV7XCVv6xJdrVsoHwyb1B9MNT8pafW1dqI-YaLbDbqgvw33paOK5DIsvfv1E4fc2eSMHIesn2B-gSN7MdcP6UEW2oobRsFU7doGE8gJCF5U0_JIo4l8AxxtE510pO9quobE_8ng2GhzPIQ\")`,\n        { signal: controller.signal }\n      );\n      responseBody = await response.json();\n    } catch (e) {\n        if (e instanceof DOMException) {\n          console.log(\"== HTTP request aborted\")\n        } else {\n          setError(true);\n          console.log(e);\n        }\n      }\n      if (!ignore) {\n        setError(false);\n        setLoading(false);\n        setSongs(responseBody.items || []);\n      } else {\n        console.log(\"== ignoring results\");\n      }\n\n    fetchSpotifyData();\n    return () => {\n      controller.abort();\n      ignore = true;\n    };\n  }\n  return (\n    <div>\n      {error && <ErrorContainer>Error!</ErrorContainer>}\n      {loading ? (\n        <Spinner />\n      ) :\n        <ul>\n          {songs.map((song, key) => (\n            <li key={song[key].id}>\n              <a href={song[key].preview_url}>{song[key].name}</a>\n            </li>\n          ))}\n        </ul>\n      }\n    </div>\n  );\n};\n\nexport default Spotify;\n"]},"metadata":{},"sourceType":"module"}