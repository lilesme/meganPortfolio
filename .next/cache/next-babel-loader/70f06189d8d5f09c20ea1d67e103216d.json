{"ast":null,"code":"var _jsxFileName = \"/Users/meganliles/CS419/Assignments/final-project-lilesme-portfolio/src/pages/github.js\";\nvar __jsx = React.createElement;\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport fetch from 'isomorphic-unfetch';\nimport queryString from 'query-string';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\nimport { useRouter } from 'next/router';\nimport { Input, Button } from '../components/FormComponents';\nimport Spinner from '../components/Spinner';\nimport ErrorContainer from '../components/ErrorContainer';\nimport Layout from '../components/Layout';\nconst search = css`\n  @import url('https://fonts.googleapis.com/css?family=Nunito&display=swap');\n  font-family: 'Nunito', sans-serif;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst results = css`\n  display: inline-block;\n  width: 1000px;\n  height: 50px;\n  background-color: lightgrey;\n  ul {\n    list-style: none;\n  }\n  a {\n    text-decoration:  none;\n    background-color: white;\n    border: lightgrey 1px;\n    width: 90px;\n    color: black;\n    border-radius: 5px;\n  }\n`;\nconst tablestyle = css`\n  @import url('https://fonts.googleapis.com/css?family=Montserrat&display=swap');\n  font-family: 'Montserrat', sans-serif;\n  margin-left: auto;\n  margin-right: auto;\n  th {\n    background-color: rgb(175,203,255);\n    color: white;\n    border-bottom: 1px solid #ddd;\n  }\n  td {\n    padding: 3px;\n  }\n  width: 90%;\n  tr:nth-child(even) {background-color: rgb(175,203,255, 0.6);}\n  tr:hover {background-color: #f5f5f5;}\n  td {\n    border-bottom: 1px solid #ddd;\n    min-width: 70px !important;\n  }\n`;\n\nfunction Github() {\n  const router = useRouter();\n  const query = router.query.q;\n  const {\n    0: inputQuery,\n    1: setInputQuery\n  } = useState(query || \"\");\n  const {\n    0: repos,\n    1: setRepos\n  } = useState([]);\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    if (query) {\n      let ignore = false;\n      const controller = new AbortController();\n\n      async function fetchSearchResults() {\n        let responseBody = {};\n        setLoading(true); //console.log(\"== Fetching search results for query:\", query);\n        //setRepos(null);\n\n        try {\n          const response = await fetch(`https://api.github.com/search/repositories?q={${query}+in:file+user:lilesme&sort=stars`, {\n            signal: controller.signal\n          });\n          responseBody = await response.json();\n        } catch (e) {\n          if (e instanceof DOMException) {\n            console.log(\"== HTTP request aborted\");\n          } else {\n            setError(true);\n            console.log(e);\n          }\n        }\n\n        if (!ignore) {\n          setError(false);\n          setLoading(false);\n          setRepos(responseBody.items || []);\n        } else {\n          console.log(\"== ignoring results\");\n        } //setRepos(responseBody.items || []);\n\n      }\n\n      fetchSearchResults();\n      return () => {\n        controller.abort();\n        ignore = true;\n      };\n    }\n  }, [query]);\n  return jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Github\"), jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Search my repositories on Github!\")), jsx(\"div\", {\n    css: search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, jsx(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      router.push(`${router.pathname}?q=${inputQuery}`);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, jsx(Input, {\n    value: inputQuery,\n    onChange: e => setInputQuery(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), jsx(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Search\")), error && jsx(ErrorContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Error!\"), loading ? jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }) : jsx(\"div\", {\n    css: tablestyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, jsx(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Name\"), jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Description\"), jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), repos.map(repo => jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, repo.full_name), jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, repo.description), jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, jsx(\"a\", {\n    href: repo.html_url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"View Repo\"))))))));\n}\n\n;\nexport default Github;","map":{"version":3,"sources":["/Users/meganliles/CS419/Assignments/final-project-lilesme-portfolio/src/pages/github.js"],"names":["jsx","css","React","useState","useEffect","useHistory","fetch","queryString","Switch","Route","Redirect","useLocation","useRouter","Input","Button","Spinner","ErrorContainer","Layout","search","results","tablestyle","Github","router","query","q","inputQuery","setInputQuery","repos","setRepos","error","setError","loading","setLoading","ignore","controller","AbortController","fetchSearchResults","responseBody","response","signal","json","e","DOMException","console","log","items","abort","preventDefault","push","pathname","target","value","map","repo","full_name","description","html_url"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport fetch from 'isomorphic-unfetch';\n\nimport queryString from 'query-string';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\nimport { useRouter } from 'next/router';\n\nimport { Input, Button } from '../components/FormComponents';\nimport Spinner from '../components/Spinner';\nimport ErrorContainer from '../components/ErrorContainer';\n\nimport Layout from '../components/Layout';\n\nconst search = css `\n  @import url('https://fonts.googleapis.com/css?family=Nunito&display=swap');\n  font-family: 'Nunito', sans-serif;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst results = css `\n  display: inline-block;\n  width: 1000px;\n  height: 50px;\n  background-color: lightgrey;\n  ul {\n    list-style: none;\n  }\n  a {\n    text-decoration:  none;\n    background-color: white;\n    border: lightgrey 1px;\n    width: 90px;\n    color: black;\n    border-radius: 5px;\n  }\n`;\n\nconst tablestyle = css`\n  @import url('https://fonts.googleapis.com/css?family=Montserrat&display=swap');\n  font-family: 'Montserrat', sans-serif;\n  margin-left: auto;\n  margin-right: auto;\n  th {\n    background-color: rgb(175,203,255);\n    color: white;\n    border-bottom: 1px solid #ddd;\n  }\n  td {\n    padding: 3px;\n  }\n  width: 90%;\n  tr:nth-child(even) {background-color: rgb(175,203,255, 0.6);}\n  tr:hover {background-color: #f5f5f5;}\n  td {\n    border-bottom: 1px solid #ddd;\n    min-width: 70px !important;\n  }\n`;\n\nfunction Github() {\n  const router = useRouter();\n  const query = router.query.q;\n  const [ inputQuery, setInputQuery ] = useState(query || \"\");\n  const [ repos, setRepos ] = useState([]);\n  const [ error, setError ] = useState(false);\n  const [ loading, setLoading ] = useState(false);\n\n\n  useEffect(() => {\n    if (query) {\n      let ignore = false;\n      const controller = new AbortController();\n\n      async function fetchSearchResults() {\n        let responseBody = {};\n        setLoading(true);\n\n        //console.log(\"== Fetching search results for query:\", query);\n        //setRepos(null);\n\n        try {\n        const response = await fetch(\n          `https://api.github.com/search/repositories?q={${query}+in:file+user:lilesme&sort=stars`,\n          { signal: controller.signal }\n        );\n        responseBody = await response.json();\n      } catch (e) {\n          if (e instanceof DOMException) {\n            console.log(\"== HTTP request aborted\");\n          } else {\n            setError(true);\n            console.log(e);\n          }\n        }\n        if (!ignore) {\n          setError(false);\n          setLoading(false);\n          setRepos(responseBody.items || []);\n        } else {\n          console.log(\"== ignoring results\");\n        }\n        //setRepos(responseBody.items || []);\n      }\n\n      fetchSearchResults();\n      return () => {\n        controller.abort();\n        ignore = true;\n      };\n    }\n  }, [ query ]);\n\n  return (\n    <div>\n      <Layout>\n        <h1>Github</h1>\n        <h2>Search my repositories on Github!</h2>\n      </Layout>\n    <div css={search}>\n      <form onSubmit={(e) => {\n        e.preventDefault();\n        router.push(`${router.pathname}?q=${inputQuery}`);\n      }}>\n        <Input\n          value={inputQuery}\n          onChange={e => setInputQuery(e.target.value)}\n        />\n      <Button type=\"submit\">Search</Button>\n      </form>\n      {error && <ErrorContainer>Error!</ErrorContainer>}\n      {loading ? (\n        <Spinner />\n      ) :\n        <div css={tablestyle}>\n          <table>\n            <th>Name</th>\n            <th>Description</th>\n            <th></th>\n              {repos.map(repo => (\n                  <tr>\n                    <td>{repo.full_name}</td>\n                    <td>{repo.description}</td>\n                    <td><a href={repo.html_url}>View Repo</a></td>\n                  </tr>\n              ))}\n          </table>\n        </div>\n      }\n    </div>\n  </div>\n  );\n};\n\nexport default Github;\n"]},"metadata":{},"sourceType":"module"}