{"version":3,"file":"static/webpack/static/development/pages/github.js.a7843d1b9733831073dd.hot-update.js","sources":["webpack:///./src/pages/github.js"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport fetch from 'isomorphic-unfetch';\n\nimport queryString from 'query-string';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\nimport { useRouter } from 'next/router';\n\nimport { Input, Button } from '../components/FormComponents';\nimport Spinner from '../components/Spinner';\nimport ErrorContainer from '../components/ErrorContainer';\n\nimport Layout from '../components/Layout';\n\nconst search = css `\n  @import url('https://fonts.googleapis.com/css?family=Nunito&display=swap');\n  font-family: 'Nunito', sans-serif;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n  display: block;\n  ul {\n    list-style:  none;\n  }\n  a {\n    text-decoration:  none;\n  }\n`;\n\nfunction Github() {\n  const router = useRouter();\n  const query = router.query.q;\n  const [ inputQuery, setInputQuery ] = useState(query || \"\");\n  const [ repos, setRepos ] = useState([]);\n  const [ error, setError ] = useState(false);\n  const [ loading, setLoading ] = useState(false);\n\n\n  useEffect(() => {\n    if (query) {\n      let ignore = false;\n      const controller = new AbortController();\n\n      async function fetchSearchResults() {\n        let responseBody = {};\n        setLoading(true);\n\n        //console.log(\"== Fetching search results for query:\", query);\n        //setRepos(null);\n\n        try {\n        const response = await fetch(\n          `https://api.github.com/search/repositories?q={${query}+in:file+user:lilesme&sort=stars`,\n          { signal: controller.signal }\n        );\n        responseBody = await response.json();\n      } catch (e) {\n          if (e instanceof DOMException) {\n            console.log(\"== HTTP request aborted\");\n          } else {\n            setError(true);\n            console.log(e);\n          }\n        }\n        if (!ignore) {\n          setError(false);\n          setLoading(false);\n          setRepos(responseBody.items || []);\n        } else {\n          console.log(\"== ignoring results\");\n        }\n        //setRepos(responseBody.items || []);\n      }\n\n      fetchSearchResults();\n      return () => {\n        controller.abort();\n        ignore = true;\n      };\n    }\n  }, [ query ]);\n\n  return (\n    <div>\n      <Layout>\n        <h1>Github</h1>\n      </Layout>\n    <div css={search}>\n      <form onSubmit={(e) => {\n        e.preventDefault();\n        router.push(`${router.pathname}?q=${inputQuery}`);\n      }}>\n        <Input\n          value={inputQuery}\n          onChange={e => setInputQuery(e.target.value)}\n        />\n      <Button type=\"submit\">Search</Button>\n      </form>\n      {error && <ErrorContainer>Error!</ErrorContainer>}\n      {loading ? (\n        <Spinner />\n      ) :\n        <ul>\n          {repos.map(repo => (\n            <li key={repo.id}>\n              <h4>{repo.full_name}</h4>\n              <p>{repo.description}</p>\n              <a href={repo.html_url}>View Repo</a>\n            </li>\n          ))}\n        </ul>\n      }\n    </div>\n  </div>\n  );\n};\n\nexport default Github;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAcA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AANA;AAAA;AAAA;AAUA;AAAA;AACA;AAXA;AAQA;AARA;AAAA;AACA;AADA;AAYA;AAZA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AACA;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAYA;AACA;AADA;AAEA;;;;A","sourceRoot":""}